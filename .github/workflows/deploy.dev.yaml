name: Dev release

on:
  push:
    branches: 
      - main

# env:
#   GHCR_REGISTRY: ghcr.io
#   GHCR_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/wavv-backend

permissions:
  contents: read
  packages: write

jobs:
  dev-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node 21
        uses: actions/setup-node@v1
        with:
          node-version: 21.X
      
      - name: Install Railway
        run: npm i -g pnpm

      - name: Install packages
        run: pnpm install

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy to Development
        run: railway up --service a878b9d9-e826-4089-a688-577441eb2f2c
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_DEVELOPMENT_TOKEN }}
    
  
      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.GHCR_REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and Push Docker Image
      #   id: push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     platforms: linux/amd64
      #     file: Dockerfile
      #     tags: |
      #       ${{ env.GHCR_IMAGE_NAME }}:latest
      #       ${{ env.GHCR_IMAGE_NAME }}:${{ github.sha }}
      
      

      # - name: Authenticate GitHub CLI
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # - name: Ensure .do directory exists
      #   run: mkdir -p .do

      # - name: Set up the app dev specs
      #   run: |
      #     GITHUB_TOKEN=${{ secrets.WAVV_REPO_PERSONAL_ACCESS_TOKEN }} gh api repos/${{ github.repository_owner }}/wavv-infrastructure/contents/.do/app.dev.yaml \
      #       --header "Accept: application/vnd.github.v3.raw" > .do/app.dev.yaml


      # - name: Deploy the wavv-dev-backend app
      #   uses: digitalocean/app_action/deploy@v2
      #   env:
      #     SAMPLE_DIGEST: ${{ steps.push.outputs.digest }}
      #   with:
      #       token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      #       app_spec_location: .do/app.dev.yaml
